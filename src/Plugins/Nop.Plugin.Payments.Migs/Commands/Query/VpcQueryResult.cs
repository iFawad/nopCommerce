using Elsheimy.Components.ePayment.Migs.Converters;
using Elsheimy.Components.ePayment.Migs.Web;

namespace Elsheimy.Components.ePayment.Migs.Commands
{
  public class VpcQueryResult : VpcCommandResult
  {
    #region Result
    /// <summary>
    /// If the value is 'Y', then there is at least one transaction with the same vpc_MerchTxnRef.
    /// </summary>
    [QueryParam(Name = "vpc_DRExists")]
    public string DRExists { get; set; }
    public virtual string DRExistsTrueValue { get { return "Y"; } }
    public bool IsExists { get { return DRExists == DRExistsTrueValue; } }

    /// <summary>
    /// If the value is 'Y', then there is at least more than one transaction with the same vpc_MerchTxnRef.
    /// </summary>
    [QueryParam(Name = "vpc_FoundMultipleDRs")]
    public string FoundMultipleDRs { get; set; }
    public virtual string FoundMultipleDRsTrueValue { get { return "Y"; } }
    public bool FoundMultipleResults { get { return FoundMultipleDRs == FoundMultipleDRsTrueValue; } }
    #endregion

    /// <summary>
    /// The amount of transaction in the smallest currency unit. e.g. if the transaction amount is $49.95 then the amount in cents is 4995.
    /// </summary>
    #region Amount
    [QueryParam(Name = "vpc_Amount")]
    public int Amount { get; set; }
    /// <summary>
    /// The actual amount of transaction.
    /// </summary>
    public decimal ActualAmount { get { return (decimal)Amount / 100.0M; } }
    #endregion

    #region Transaction
    /// <summary>
    /// A date supplied by an acquirer to indicate when this transaction will be settled.
    /// </summary>
    [QueryParam(Name = "vpc_BatchNo")]
    public string BatchNo { get; set; }
    /// <summary>
    /// Merchant unique transaction type.
    /// </summary>
    [QueryParam(Name = "vpc_MerchTxnRef")]
    public string MerchantTxnReference { get; set; }
    /// <summary>
    /// A message to indicate an error the transaction encountered.
    /// </summary>
    [QueryParam(Name = "vpc_Message")]
    public string Message { get; set; }

    /// <summary>
    /// A unique number generated by the VPC for the transaction.
    /// </summary>
    [QueryParam(Name = "vpc_TransactionNo")]
    public string TransactionNo { get; set; }


    /// <summary>
    /// A response code that is generated by the payment server to indicate the status of the transaction. A value of '0' indicates a successful transaction.
    /// </summary>
    [QueryParam(Name = "vpc_TxnResponseCode")]
    public string TxnResponseCode { get; set; }

    public IValueConverter ResponseCodeConverter { get; set; }
    public string TxnResponseMessage { get { return ResponseCodeConverter.Convert(TxnResponseCode); } }
    #endregion

    public VpcQueryResult()
    {
      this.ResponseCodeConverter = new VpcResponseConverter();
    }
  }
}
